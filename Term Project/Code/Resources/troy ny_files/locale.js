I18n.setPluralRule('en', function pluralizeEN(n) { var i=Math.floor(Math.abs(n)),v=n.toString().replace(/^[^.]*\.?/,"").length;if(typeof n==="string")n=parseInt(n,10);if(i===1&&v===0)return"one";return"other" });I18n.configure({"locale":"en_US","country":"US","translations":{"js":{"modules":{"breadcrumb":{"presenters":{"page_title_format":"{{categoryText}} in {{locationText}}","local_friendly_name":"Local"}},"browse":{"presenters":{"all_deals_category_id":"all-deals","all_deals_friendly_name":"All Deals","back_to_top":"Back to Top","local_deals_friendly_name":"Local Deals","featured_deal_category_id":"featured-deal","featured_deal_friendly_name":"Featured Deal","new_deals_category_id":"new-deals","new_deals_friendly_name":"New Deals","rewards_friendly_name":"Rewards","view_deal_button":"View","pagination":{"previous":"Previous","next":"Next","results":"{{strongOpen}}{{startingIndex}} - {{endingIndex}}{{strongClose}} of {{totalDealCount}} results","limited_results":"{{strongOpen}}{{startingIndex}} - {{endingIndex}}{{strongClose}} results"},"error_message":{"message_header":"Oops!","message_content_p1":"We hoped you wouldn't see us like this. {{aOpen}}Try refreshing the page{{aClose}}.","message_content_p2":"If that doesn't work, try using the search bar or tabs above to {{breakline}}help you find what you're looking for."},"page_header":{"query_message":"\"{{query}}\" deals","results_for_query_message":"results for \"{{query}}\"","all_no_deals_title":"No Deals Found","all_no_deals_message":"Our deal searchers couldn't find any nearby deals at the moment."},"deals_footer_see_more":"See {{nextPageSize}} More Deal{{pluralCharacter}}","deals_footer_see_more_pages":{"one":"See {{count}} More Deal","other":"See {{count}} More Deals"},"deals_footer_showing_count":"Showing {{fetchedDealCount}} of {{totalDealCount}}"}},"map":{"presenters":{"sold_out":"Sold Out","maximize":"Expand Map","zoom_in":"Zoom In","zoom_out":"Zoom Out","minimize":"Collapse Map"}},"personalize_wizard":{"places_step":{"errors":{"required":"Location can't be blank","not_done_yet":"Not done yet!"}},"place":{"errors":{"required":"Location can't be blank"}}},"refinement_bar":{"location_title":"Location","interests_title":"Interests","all":"All","showmore_modal":{"cities_title":"Cities","apply_button":"Apply"}},"seo-platform-editorial":{"relatedContent":"Related Reads","readMore":"Read More","readLess":"Read Less","widgetTitle":"{{locationName}} Scene"},"seo":{"section_headings":{"nearby_deals":"Nearby Deals"}},"subscribe_drawer":{"email_error_message":"A valid email address is required.","generic_error_message":"There was a problem. Please try again later."}}},"number":{"symbols":{"decimal":".","group":",","list":";","percentSign":"%","plusSign":"+","minusSign":"-","exponential":"E","perMille":"‰","infinity":"∞","nan":"NaN","currency":{"EUR":"€","XCD":"EC$","USD":"$","AUD":"A$","XOF":"CFA","BRL":"R$","CAD":"C$","XAF":"FCFA","NZD":"NZ$","CNY":"CN¥","GBP":"£","HKD":"HK$","ILS":"₪","INR":"₹","JPY":"¥","KRW":"₩","MXN":"MX$","XPF":"CFPF","PLN":"zł","THB":"฿","TWD":"NT$","VND":"₫"}},"formats":{"scientific":"#E0","decimal":"#,##0.###","currency":"¤#,##0.00;(¤#,##0.00)","percent":"#,##0%"},"defaultCurrency":"USD"}},"scope":"js"});I18n.mixin=function (viewCtx, _i18n) { var HTML_ESCAPE, HTML_ESCAPE_REGEXP, PLACEHOLDER, TRANSLATED_ATTRIBUTES, isNumber, version, _ref; TRANSLATED_ATTRIBUTES = { alt: true, height: true, width: true }; PLACEHOLDER = /(?:\{\{|%\{)\s*(.*?)\s*(?:\}\}?)/gm; HTML_ESCAPE = { '"': '&quot;', '<': '&lt;', '>': '&gt;' }; HTML_ESCAPE_REGEXP = /["<>]/g; isNumber = function(n) { return !isNaN(parseFloat(n)) && isFinite(n); }; if (viewCtx == null) { viewCtx = {}; } if ((_i18n == null) && (typeof I18n !== "undefined" && I18n !== null)) { _i18n = I18n; } viewCtx.locale = _i18n.locale; viewCtx.country = _i18n.country; viewCtx.lang = _i18n.lang; version = (_ref = _i18n.translations) != null ? _ref.$checksum : void 0; viewCtx.clientSideTranslationQueryString = (version != null ? "country=" + _i18n.country + "&locale=" + _i18n.locale + "&version=" + (version.substr(0, 10)) : "country=" + _i18n.country + "&locale=" + _i18n.locale); viewCtx.translate = viewCtx.t = function(text) { var args, err, key, opts; args = text.split(','); key = args.shift().replace(/\s+/g, ''); if (args.length) { args = args.join(',').trim().replace(PLACEHOLDER, (function(_this) { return function(_, keyPath) { var value; value = _this; keyPath.split('.').forEach(function(keyPart) { if (!((value != null) && 'object' === typeof value)) { return null; } return value = value[keyPart]; }); return JSON.stringify(value != null ? value : null); }; })(this)); try { opts = JSON.parse(args.replace(/^\s*([^{\s][\S\s]*[^\s])\s*$/, '{$1}')); } catch (_error) { err = _error; err.message += " in translate-options for key " + key; throw err; } } return _i18n.t(key, opts != null ? opts : {}); }; viewCtx.translateimg = function(json) { var hash, imgAttrs, key, value; imgAttrs = []; hash = JSON.parse(json); for (key in hash) { value = hash[key]; if (TRANSLATED_ATTRIBUTES[key]) { if (!isNumber(value)) { value = _i18n.t(value).toString().replace(HTML_ESCAPE_REGEXP, function(specialChar) { return HTML_ESCAPE[specialChar]; }); } } else if (key === "src") { value = "/images/" + _i18n.locale + "/" + value; } imgAttrs.push("" + key + "=\"" + value + "\""); } imgAttrs = imgAttrs.join(' '); return "<img " + imgAttrs + "/>"; }; return viewCtx; }